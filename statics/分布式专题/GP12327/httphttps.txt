分布式专题/http/https
1.http和https的区别:
  1.http是超文本传输协议，采用明文传输,https则是具有安全性的ssl加密传输协议;
  2.端口为不同，http:80,https:443;
  3.https 需要ca证书

2.简单说说https是如何保证安全传输的
	客户端通过对传输数据进行加密传输，只有持有私钥的服务端才能解密，保证数据的安全性。


3.https是不是绝对安全的？有没有办法被破解？
	如果知道加密算法，可能被破解

4.http无状态协议，怎么理解无状态协议。如何实现有状态的请求
  无状态协议，当浏览器发送请求给服务器的时候，服务器进行响应，但当同一个浏览器再次发送请求时，
	服务器的并不知道是同一个浏览器发送的请求。
   用cookie或session实现有状态的请求。

5.说说http协议中的302状态码的作用
	302状态码指临时重定向，该状态码表示请求的资源已被分配了新的URI，希望用户（本次）能使用新的URI访问，
	服务端可以通过返回状态码302 ，header 中加入location属性，实现让浏览器将用户的请求重定向到另一URL中。

6.304缓存原理
	304 表示未修改（表示客户机缓存的版本是最新的，客户机应该继续使用它。
	进行条件请求时,客户端会提供给服务器一个If-Modified-Since请求头,其值为服务器上次返回的Last-Modified
	响应头中的日期值,还会提供一个If-None-Match请求头,值为服务器上次返回的ETag响应头的值；服务器会读取到
	这两个请求头中的值,判断出客户端缓存的资源是否是最新的,如果是的话,服务器就会返回HTTP/304 Not Modified
	响应,但没有响应体.客户端收到304响应后,就会从缓存中读取对应的资源。
  

7.http协议1.0和http协议1.1的区别
	   1.HTTP 1.0规定浏览器与服务器只保持短暂的连接，浏览器的每次请求都需要与服务器建立一个TCP连接，服务器
	完成请求处理后立即断开TCP连接，服务器不跟踪每个客户也不记录过去的请求；HTTP 1.1则支持持久连接Persistent
	Connection, 并且默认使用persistent  connection. 在同一个tcp的连接中可以传送多个HTTP请求和响应. 多个请求
	和响应可以重叠，多个请求和响应可以同时进行. 更加多的请求头和响应头。
	  2.HTTP 1.1增加host字段
	  3.HTTP/1.1加入了一个新的状态码100（Continue）。客户端事先发送一个只带头域的请求，如果服务器因为权限
	拒绝了请求，就回送响应码401（Unauthorized）；如果服务器接收此请求就回送响应码100，客户端就可以继续发送
	带实体的完整请求了。100 (Continue) 状态代码的使用，允许客户端在发request消息body之前先用request header
	试探一下server，看server要不要接收request body，再决定要不要发request body。
	  4.HTTP/1.1中引入了Chunked transfer-coding，发送方将消息分割成若干个任意大小的数据块，每个数据块在发送
	时都会附上块的长度，最后用一个零长度的块作为消息结束的标志。这种方法允许发送方只缓冲消息的一个片段，避免
	缓冲整个消息带来的过载。
	   5.HTTP/1.1在1.0的基础上加入了一些cache的新特性，当缓存对象的Age超过Expire时变为stale对象，cache不需要
	直接抛弃stale对象，而是与源服务器进行重新激活（revalidation）。

8.如何保证基于http协议的接口的安全性
   使用加密转输的https协议，使用token.


9.http协议上传文件，数据如何传输？
		设置form的enctype属性的值为multipart/form-data.

10.说说http协议的优缺点
		优：
		   1、简单快速：客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有GET、HEAD、POST。每种方
		法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。

				2、灵活：HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。

			  3.无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开
		连接。采用这种方式可以节省传输时间。

        4.无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要
    前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答
    就较快。
        5、支持B/S及C/S模式。
		
		缺：
		  1.在同等网络环境下，传输比tcp传输字节数更多，效率更低。
		  2.通信使用明文，可能被窃听，不验证通信方的身份，可能遭遇伪装，无法证明报文的完整性，有可能遭遇篡改。
			

11.一次http请求的完整交互流程
	1.浏览器根据http协议解析出url对应的域名
	2.通过DNS域名解析，查询出对应的ip
	3.通过url解析出对应的端口号
	4.浏览器与解析的ip和端口号的服务器建立连接
	5.浏览器向服务器发送请求
	6.服务器响应请求，浏览器读取响应，渲染网页
	7.浏览器与服务器关闭连接
