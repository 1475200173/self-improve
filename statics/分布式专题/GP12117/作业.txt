分布式架构基础作业
1.	TCP/IP三次握手和四次分离概念以及状态变化过程？

握手:
	
 










 分离：
                                                            












2.建立连接需要3次，为什么断开连接需要4次？
因为握手明确由客户端发起，连接的过程只要相互确定就行，而分离客户端和服务端都有可能发起分离请求，分离请求A->B的过程中，由于A发起，但是B并不一定此时准备好，很有可能还有带接受的数据没有处理完成，此时需要完成之后才能回复A我已经准备好关闭准备，所以才多出分离的第三个步骤的情况

3.三次握手有哪些不安全性？
	通过三次握手的连接特性，伪造ip发送请求，占用服务器资源

4 .TCP和UDP的区别？TCP是通过什么方式来保证可靠性的
	TCP是安全可靠的连接，如上的连接，UDP则是无连接状态的，TCP提供可靠的服务，也就是说TCP传送的数据，无差错，不会丢失，不重复，按序到达，UDP努力完成交付，但不保证一定到达。

5.tcp四层网络模型和osi七层网络模型分别是什么？以及每一层的作用
	TCP四层网络：
	








6.什么是滑动窗口协议？它的实现原理是什么？
	华东窗口协议是TCP协议的一种应用方式，主要针对数据传输过程中的流量控制

7.服务器上TIME_WAIT状态的连接过多，怎么解决？
	调整内核配置参数

8.什么是NIO、BIO、AIO？他们的区别？
	NIO：NoBlocking-IO，同步非阻塞IO，BIO：Blocking-IO，同步阻塞IO，AIO：异步非阻塞IO

9.了解过多路复用吗？它是一个什么实现原理？

10.epool和select的区别是什么？

HTTP：

1.	http和https的区别
http和https都是基于tcp/ip协议的，https在http的基础上增加了SSL层，保证数据在传输过程中的安全性

2.	简单说说https是如何保证安全传输的
通过数字签名证书

3.	https是不是绝对安全的？有没有办法被破解？
不是绝对安全的，因为证书也有可能被仿照，特别是那些免费的证书。

4.http无状态协议，怎么理解无状态协议。如何实现有状态的请求
当浏览器发送请求给服务器的时候，服务器会发声响应，下一次请求发送给服务器，服务器也会发生响应，但是服务器不会记着你就是刚才发送请求的那个浏览器，也就是说，你的各个请求都是相互无关的
为了实现有状态的请求，服务端引用了session的概念，客户端引用了cookie，客户端第一次发送请求给服务端校验成功之后，服务端会发送给客户端sessionId,作为服务器与客户端连接的判断标识符，客户端会把这个sessionId放到本地cookie中缓存起来，保存到浏览器中，在下次请求中带上相应cookie中的信息到服务端。

5.说说http协议中的302状态码的作用
a)	302是指暂时把页面内容定位到新页面地址，但是老的ur并没废除，除非显示的在包头信息中设置Cache-Controller.

6.304缓存原理

7.http协议1.0和http协议1.1的区别
	1.1增加长连接，通过连接的头部信息connection设置为keep-alive
	
8.如何保证基于http协议的接口的安全性
	数据加密，过滤器拦截器拦截校验…

9.http协议上传文件，数据如何传输？
	二进制数据？？

10.说说http协议的优缺点
	http是无状态传输协议，是基于tcp/ip协议的基础上的应用层传输协议，所以它包含了tcp协议的优缺点。

11.一次http请求的完整交互流程
	1.建立TCP连接请求
2.向web端发送请求命令，请求信息包含请求头信息，参数信息
3.web服务器做出应答，返回状态码，以及响应内容
4.结束关闭tcp连接
	

序列化
1.	什么是序列化，Java是如何实现序列化的
a)	序列化就是将对象信息转换成可存储和可传输的状态过程，java序列化需实现序列化接口

2.	如果一个子类实现了序列化，父类没有实现，那么父类中的成员变量能否被序列化？
a)	不能，反过来如果父类实现了序列化子类默认实现序列化接口

3.	你有了解过哪些序列化技术？以及他们之间的差异性？
i.	Java原生输入输出流 	通过输入输出流形式实现
ii.	转成JSON		转成JSON格式，格式固定	
iii.	Protobuff			转化成二进制存储，压缩数据

4.	transient是干嘛的？
禁止java对象中的属性被序列化

5.	有什么方法能够绕过transient的机制。这个实现机制的原理是什么？
实现序列化接口的类中重写writeObject方法，读取的时候重写readObject方法

6.	serializable的安全性如何保证
a)	目前无法更好的保证序列化数据的安全，因为可以被篡改，但是可以在序列化之前加密处理处理之后在序列化。

7.	有没有了解过protobuf，它的序列化实现原理是什么？
a)	

8.	serialVersionUID的作用是什么？如果我不设置serialVersionUID,有没有问题
a)	serialVersionUID是用来验证版本一致性的，如果不设置可能由于不同的运行环境下反序列化失败，或者在对象所在的类字段发生变化时反序列化失败
